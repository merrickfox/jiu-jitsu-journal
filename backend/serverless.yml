service: jjj-api

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    USERS_TABLE: "${self:provider.stage}-users-${self:service}"
    ACTIVITIES_TABLE: "${self:provider.stage}-activities-${self:service}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  query:
    handler: handler.query
    events:
      - http:
          path: query
          method: post
  graphiql:
    handler: handler.graphiql
    events:
      - http: GET /
resources:
  Resources:
    ActivitiesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
          - AttributeName: activity_date
            AttributeType: N
        KeySchema:
          - AttributeName: user
            KeyType: HASH
          - AttributeName: activity_date
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:provider.environment.ACTIVITIES_TABLE}"
    UsersTable:
          Type: 'AWS::DynamoDB::Table'
          Properties:
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: S
              - AttributeName: auth0id
                AttributeType: S
            KeySchema:
              - AttributeName: id
                KeyType: HASH
              - AttributeName: auth0id
                KeyType: RANGE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            TableName: "${self:provider.environment.USERS_TABLE}"
plugins:
  - serverless-webpack
  - serverless-offline
custom:
  webpackIncludeModules: true # enable auto-packing of external modules
